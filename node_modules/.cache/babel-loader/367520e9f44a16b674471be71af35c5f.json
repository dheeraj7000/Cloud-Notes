{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\E-Notes\\\\iNotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n    _s = $RefreshSig$();\n\nimport NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteState = props => {\n  _s();\n\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial); // Get all Notes\n\n  const getNotes = async () => {\n    // API Call \n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    setNotes(json);\n  }; // Add a Note\n\n\n  const addNote = async (title, description, tag) => {\n    // TODO: API Call\n    // API Call \n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await response.json();\n    setNotes(notes.concat(note));\n  }; // Delete a Note\n\n\n  const deleteNote = async id => {\n    // API Call\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  }; // Edit a Note\n\n\n  const editNote = async (id, title, description, tag) => {\n    // API Call \n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newNotes = JSON.parse(JSON.stringify(notes)); // Logic to edit in client\n\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n\n    setNotes(newNotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["NoteContext","useState","NoteState","props","host","notesInitial","notes","setNotes","getNotes","response","fetch","method","headers","localStorage","getItem","json","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","console","log","newNotes","filter","_id","editNote","parse","index","length","element","children"],"sources":["C:/Users/Asus/Desktop/E-Notes/iNotebook/src/context/notes/NoteState.js"],"sourcesContent":["import NoteContext from \"./noteContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:5000\"\r\n  const notesInitial = []\r\n  const [notes, setNotes] = useState(notesInitial)\r\n\r\n  // Get all Notes\r\n  const getNotes = async () => {\r\n    // API Call \r\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": localStorage.getItem(\"token\")\r\n      }\r\n    });\r\n    const json = await response.json()\r\n    setNotes(json)\r\n  }\r\n\r\n  // Add a Note\r\n  const addNote = async (title, description, tag) => {\r\n    // TODO: API Call\r\n    // API Call \r\n    const response = await fetch(`${host}/api/notes/addnote`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": localStorage.getItem(\"token\")\r\n      },\r\n      body: JSON.stringify({ title, description, tag })\r\n    });\r\n\r\n    const note = await response.json();\r\n    setNotes(notes.concat(note))\r\n  }\r\n\r\n  // Delete a Note\r\n  const deleteNote = async (id) => {\r\n    // API Call\r\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": localStorage.getItem(\"token\")\r\n      }\r\n    });\r\n    const json = response.json();\r\n    console.log(json);\r\n    const newNotes = notes.filter((note) => { return note._id !== id })\r\n    setNotes(newNotes)\r\n  }\r\n\r\n  // Edit a Note\r\n  const editNote = async (id, title, description, tag) => {\r\n    // API Call \r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": localStorage.getItem(\"token\")\r\n      },\r\n      body: JSON.stringify({ title, description, tag })\r\n    });\r\n    const json = await response.json();\r\n    console.log(json);\r\n\r\n    let newNotes = JSON.parse(JSON.stringify(notes))\r\n    // Logic to edit in client\r\n    for (let index = 0; index < newNotes.length; index++) {\r\n      const element = newNotes[index];\r\n      if (element._id === id) {\r\n        newNotes[index].title = title;\r\n        newNotes[index].description = description;\r\n        newNotes[index].tag = tag;\r\n        break;\r\n      }\r\n    }\r\n    setNotes(newNotes);\r\n  }\r\n\r\n  return (\r\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  )\r\n\r\n}\r\nexport default NoteState;"],"mappings":"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"},"metadata":{},"sourceType":"module"}